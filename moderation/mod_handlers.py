# moderation/mod_handlers.py

import asyncio
from datetime import datetime
import pytz

from pyrogram import Client
from pyrogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from pyrogram.enums import ChatType, ChatMemberStatus, ParseMode

from config import OWNER_ID, URL_PATTERN
from database.mongo_setup import (
    group_tracking_collection, messages_collection,
    biolink_exceptions_collection, earning_tracking_collection,
    client_messages, client_buttons, client_tracking,
    user_tracking_collection # Added for clearall functionality
)
from utils.helpers import (
    logger, is_on_command_cooldown, update_command_cooldown,
    is_admin_or_owner, send_and_auto_delete_reply, store_message
)

async def toggle_chat_command(client: Client, message: Message):
    if is_on_command_cooldown(message.from_user.id):
        return
    update_command_cooldown(message.from_user.id)

    if not message.chat.type in [ChatType.GROUP, ChatType.SUPERGROUP]:
        await send_and_auto_delete_reply(message, text="Yeh command sirf groups mein kaam karti hai, darling! üòâ", parse_mode=ParseMode.MARKDOWN)
        return

    member = await client.get_chat_member(message.chat.id, message.from_user.id)
    if member.status not in [ChatMemberStatus.OWNER, ChatMemberStatus.ADMINISTRATOR]:
        await send_and_auto_delete_reply(message, text="Maaf karna, yeh command sirf group admins hi use kar sakte hain. ü§∑‚Äç‚ôÄÔ∏è", parse_mode=ParseMode.MARKDOWN)
        return

    if len(message.command) < 2:
        current_status_doc = group_tracking_collection.find_one({"_id": message.chat.id})
        current_status = current_status_doc.get("bot_enabled", True) if current_status_doc else True
        status_text = "chaalu hai (ON)" if current_status else "band hai (OFF)"
        await send_and_auto_delete_reply(message, text=f"Main abhi is group mein **{status_text}** hoon. Use `/chat on` ya `/chat off` control karne ke liye. (Code by @asbhaibsr)", parse_mode=ParseMode.MARKDOWN)
        return

    action = message.command[1].lower()

    if action == "on":
        group_tracking_collection.update_one(
            {"_id": message.chat.id},
            {"$set": {"bot_enabled": True}}
        )
        await send_and_auto_delete_reply(message, text="üöÄ Main phir se aa gayi! Ab main is group mein baatein karungi aur seekhungi. üòä", parse_mode=ParseMode.MARKDOWN)
        logger.info(f"Bot enabled in group {message.chat.id} by admin {message.from_user.id}. (Code by @asbhaibsr)")
    elif action == "off":
        group_tracking_collection.update_one(
            {"_id": message.chat.id},
            {"$set": {"bot_enabled": False}}
        )
        await send_and_auto_delete_reply(message, text="üò¥ Main abhi thodi der ke liye chup ho rahi hoon. Jab meri zaroorat ho, `/chat on` karke bula lena. Bye-bye! üëã", parse_mode=ParseMode.MARKDOWN)
        logger.info(f"Bot disabled in group {message.chat.id} by admin {message.from_user.id}. (Code by @asbhaibsr)")
    else:
        await send_and_auto_delete_reply(message, text="Galat command, darling! `/chat on` ya `/chat off` use karo. üòâ", parse_mode=ParseMode.MARKDOWN)

    await store_message(message)
    await update_user_info(message.from_user.id, message.from_user.username, message.from_user.first_name)


async def toggle_linkdel_command(client: Client, message: Message):
    if is_on_command_cooldown(message.from_user.id):
        return
    update_command_cooldown(message.from_user.id)

    if not await is_admin_or_owner(client, message.chat.id, message.from_user.id):
        await send_and_auto_delete_reply(message, text="‡§Æ‡§æ‡§´‡§º ‡§ï‡§∞‡§®‡§æ, ‡§Ø‡•á ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§∏‡§ø‡§∞‡•ç‡§´‡§º ‡§Æ‡•á‡§∞‡•á ‡§¨‡•â‡§∏ (‡§è‡§°‡§Æ‡§ø‡§®) ‡§π‡•Ä ‡§Ø‡•Ç‡§ú‡§º ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç! ü§∑‚Äç‚ôÄÔ∏è", parse_mode=ParseMode.MARKDOWN)
        return

    if len(message.command) < 2:
        current_status_doc = group_tracking_collection.find_one({"_id": message.chat.id})
        current_status = current_status_doc.get("linkdel_enabled", False) if current_status_doc else False
        status_text = "‡§ö‡§æ‡§≤‡•Ç ‡§π‡•à (ON)" if current_status else "‡§¨‡§Ç‡§¶ ‡§π‡•à (OFF)"
        await send_and_auto_delete_reply(message, text=f"‡§Æ‡•á‡§∞‡•Ä '‡§≤‡§ø‡§Ç‡§ï ‡§ú‡§æ‡§¶‡•Ç' ‡§ï‡•Ä ‡§õ‡§°‡§º‡•Ä ‡§Ö‡§≠‡•Ä **{status_text}** ‡§π‡•à. ‡§á‡§∏‡•á ‡§ï‡§Ç‡§ü‡•ç‡§∞‡•ã‡§≤ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è `/linkdel on` ‡§Ø‡§æ `/linkdel off` ‡§Ø‡•Ç‡§ú‡§º ‡§ï‡§∞‡•ã. üòâ", parse_mode=ParseMode.MARKDOWN)
        return

    action = message.command[1].lower()
    if action == "on":
        group_tracking_collection.update_one(
            {"_id": message.chat.id},
            {"$set": {"linkdel_enabled": True}},
            upsert=True
        )
        await send_and_auto_delete_reply(message, text="‡§π‡•Ä ‡§π‡•Ä ‡§π‡•Ä! ü§≠ ‡§Ö‡§¨ ‡§ï‡•ã‡§à ‡§≠‡•Ä ‡§∂‡§∞‡§æ‡§∞‡§§‡•Ä ‡§≤‡§ø‡§Ç‡§ï ‡§≠‡•á‡§ú‡•á‡§ó‡§æ, ‡§§‡•ã ‡§Æ‡•à‡§Ç ‡§â‡§∏‡•á ‡§ú‡§æ‡§¶‡•Ç ‡§∏‡•á ‡§ó‡§æ‡§Ø‡§¨ ‡§ï‡§∞ ‡§¶‡•Ç‡§Ç‡§ó‡•Ä! ü™Ñ ‡§ó‡•ç‡§∞‡•Å‡§™ ‡§ï‡•ã ‡§è‡§ï‡§¶‡§Æ ‡§∏‡§æ‡§´‡§º-‡§∏‡•Å‡§•‡§∞‡§æ ‡§∞‡§ñ‡§®‡§æ ‡§π‡•à ‡§®! üòâ", parse_mode=ParseMode.MARKDOWN)
        logger.info(f"Link deletion enabled in group {message.chat.id} by admin {message.from_user.id}.")
    elif action == "off":
        group_tracking_collection.update_one(
            {"_id": message.chat.id},
            {"$set": {"linkdel_enabled": False}},
            upsert=True
        )
        await send_and_auto_delete_reply(message, text="‡§†‡•Ä‡§ï ‡§π‡•à, ‡§†‡•Ä‡§ï ‡§π‡•à! ‡§Æ‡•à‡§Ç‡§®‡•á ‡§Ö‡§™‡§®‡•Ä '‡§≤‡§ø‡§Ç‡§ï ‡§ú‡§æ‡§¶‡•Ç' ‡§ï‡•Ä ‡§õ‡§°‡§º‡•Ä ‡§∞‡§ñ ‡§¶‡•Ä ‡§π‡•à! üòá ‡§Ö‡§¨ ‡§Ü‡§™ ‡§ú‡•ã ‡§ö‡§æ‡§π‡•á ‡§≤‡§ø‡§Ç‡§ï ‡§≠‡•á‡§ú ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç! ‡§™‡§∞ ‡§ß‡•ç‡§Ø‡§æ‡§® ‡§∏‡•á, ‡§ì‡§ï‡•á?", parse_mode=ParseMode.MARKDOWN)
        logger.info(f"Link deletion disabled in group {message.chat.id} by admin {message.from_user.id}.")
    else:
        await send_and_auto_delete_reply(message, text="‡§â‡§Æ‡•ç‡§Æ... ‡§Æ‡•Å‡§ù‡•á ‡§∏‡§Æ‡§ù ‡§®‡§π‡•Ä‡§Ç ‡§Ü‡§Ø‡§æ! üòï `/linkdel on` ‡§Ø‡§æ `/linkdel off` ‡§Ø‡•Ç‡§ú‡§º ‡§ï‡§∞‡•ã, ‡§™‡•ç‡§≤‡•Ä‡§ú‡§º! ‚ú®", parse_mode=ParseMode.MARKDOWN)

    await store_message(message)


async def toggle_biolinkdel_command(client: Client, message: Message):
    if is_on_command_cooldown(message.from_user.id):
        return
    update_command_cooldown(message.from_user.id)

    if not await is_admin_or_owner(client, message.chat.id, message.from_user.id):
        await send_and_auto_delete_reply(message, text="‡§Æ‡§æ‡§´‡§º ‡§ï‡§∞‡§®‡§æ, ‡§Ø‡•á ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§∏‡§ø‡§∞‡•ç‡§´‡§º ‡§Æ‡•á‡§∞‡•á ‡§¨‡•â‡§∏ (‡§è‡§°‡§Æ‡§ø‡§®) ‡§π‡•Ä ‡§Ø‡•Ç‡§ú‡§º ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç! ü§∑‚Äç‚ôÄÔ∏è", parse_mode=ParseMode.MARKDOWN)
        return

    if len(message.command) < 2:
        current_status_doc = group_tracking_collection.find_one({"_id": message.chat.id})
        current_status = current_status_doc.get("biolinkdel_enabled", False) if current_status_doc else False
        status_text = "‡§ö‡§æ‡§≤‡•Ç ‡§π‡•à (ON)" if current_status else "‡§¨‡§Ç‡§¶ ‡§π‡•à (OFF)"
        await send_and_auto_delete_reply(message, text=f"‡§Æ‡•á‡§∞‡•Ä '‡§¨‡§æ‡§Ø‡•ã-‡§≤‡§ø‡§Ç‡§ï ‡§™‡•Å‡§≤‡§ø‡§∏' ‡§Ö‡§≠‡•Ä **{status_text}** ‡§π‡•à. ‡§á‡§∏‡•á ‡§ï‡§Ç‡§ü‡•ç‡§∞‡•ã‡§≤ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è `/biolinkdel on` ‡§Ø‡§æ `/biolinkdel off` ‡§Ø‡•Ç‡§ú‡§º ‡§ï‡§∞‡•ã. üëÆ‚Äç‚ôÄÔ∏è", parse_mode=ParseMode.MARKDOWN)
        return

    action = message.command[1].lower()
    if action == "on":
        group_tracking_collection.update_one(
            {"_id": message.chat.id},
            {"$set": {"biolinkdel_enabled": True}},
            upsert=True
        )
        await send_and_auto_delete_reply(message, text="‡§π‡§Æ‡•ç‡§Æ... üòº ‡§Ö‡§¨ ‡§∏‡•á ‡§ú‡•ã ‡§≠‡•Ä **‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§Ö‡§™‡§®‡•Ä ‡§¨‡§æ‡§Ø‡•ã ‡§Æ‡•á‡§Ç `t.me` ‡§Ø‡§æ `http/https` ‡§≤‡§ø‡§Ç‡§ï ‡§∞‡§ñ‡•á‡§ó‡§æ**, ‡§Æ‡•à‡§Ç ‡§â‡§∏‡§ï‡•á **‡§Æ‡•à‡§∏‡•á‡§ú ‡§ï‡•ã ‡§ö‡•Å‡§™‡§ö‡§æ‡§™ ‡§π‡§ü‡§æ ‡§¶‡•Ç‡§Ç‡§ó‡•Ä!** (‡§Ö‡§ó‡§∞ ‡§â‡§∏‡•á `/biolink` ‡§∏‡•á ‡§õ‡•Ç‡§ü ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡•Ä ‡§π‡•à). ‡§ó‡•ç‡§∞‡•Å‡§™ ‡§Æ‡•á‡§Ç ‡§ï‡•ã‡§à ‡§Æ‡§∏‡•ç‡§§‡•Ä ‡§®‡§π‡•Ä‡§Ç! ü§´", parse_mode=ParseMode.MARKDOWN)
        logger.info(f"Biolink deletion enabled in group {message.chat.id} by admin {message.from_user.id}.")
    elif action == "off":
        group_tracking_collection.update_one(
            {"_id": message.chat.id},
            {"$set": {"biolinkdel_enabled": False}},
            upsert=True
        )
        await send_and_auto_delete_reply(message, text="‡§ì‡§ï‡•á ‡§°‡§æ‡§∞‡•ç‡§≤‡§ø‡§Ç‡§ó‡•ç‡§∏! üòá ‡§Ö‡§¨ ‡§Æ‡•à‡§Ç ‡§Ø‡•Ç‡§ú‡§º‡§∞‡•ç‡§∏ ‡§ï‡•Ä ‡§¨‡§æ‡§Ø‡•ã ‡§Æ‡•á‡§Ç `t.me` ‡§î‡§∞ `http/https` ‡§≤‡§ø‡§Ç‡§ï‡•ç‡§∏ ‡§ï‡•ã ‡§ö‡•á‡§ï ‡§ï‡§∞‡§®‡§æ ‡§¨‡§Ç‡§¶ ‡§ï‡§∞ ‡§∞‡§π‡•Ä ‡§π‡•Ç‡§Å! ‡§∏‡§¨ ‡§´‡•ç‡§∞‡•Ä-‡§´‡•ç‡§∞‡•Ä! üéâ", parse_mode=ParseMode.MARKDOWN)
        logger.info(f"Biolink deletion disabled in group {message.chat.id} by admin {message.from_user.id}.")
    else:
        await send_and_auto_delete_reply(message, text="‡§â‡§Æ‡•ç‡§Æ... ‡§Æ‡•Å‡§ù‡•á ‡§∏‡§Æ‡§ù ‡§®‡§π‡•Ä‡§Ç ‡§Ü‡§Ø‡§æ! üòï `/biolinkdel on` ‡§Ø‡§æ `/biolinkdel off` ‡§Ø‡•Ç‡§ú‡§º ‡§ï‡§∞‡•ã, ‡§™‡•ç‡§≤‡•Ä‡§ú‡§º! ‚ú®", parse_mode=ParseMode.MARKDOWN)

    await store_message(message)


async def allow_biolink_user_command(client: Client, message: Message):
    if is_on_command_cooldown(message.from_user.id):
        return
    update_command_cooldown(message.from_user.id)

    if not await is_admin_or_owner(client, message.chat.id, message.from_user.id):
        await send_and_auto_delete_reply(message, text="‡§Æ‡§æ‡§´‡§º ‡§ï‡§∞‡§®‡§æ, ‡§Ø‡•á ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§∏‡§ø‡§∞‡•ç‡§´‡§º ‡§Æ‡•á‡§∞‡•á ‡§¨‡•â‡§∏ (‡§è‡§°‡§Æ‡§ø‡§®) ‡§π‡•Ä ‡§Ø‡•Ç‡§ú‡§º ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç! ü§∑‚Äç‚ôÄÔ∏è", parse_mode=ParseMode.MARKDOWN)
        return

    if len(message.command) < 2:
        await send_and_auto_delete_reply(message, text="‡§ï‡§ø‡§∏ ‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§ï‡•ã ‡§¨‡§æ‡§Ø‡•ã-‡§≤‡§ø‡§Ç‡§ï ‡§ï‡•Ä ‡§õ‡•Ç‡§ü ‡§¶‡•á‡§®‡•Ä ‡§π‡•à? ‡§Æ‡•Å‡§ù‡•á ‡§â‡§∏‡§ï‡•Ä User ID ‡§¶‡•ã ‡§®‡§æ, ‡§ú‡•à‡§∏‡•á: `/biolink 123456789` ‡§Ø‡§æ `/biolink remove 123456789`! üòâ", parse_mode=ParseMode.MARKDOWN)
        return

    action_or_user_id = message.command[1].lower()
    target_user_id = None

    if action_or_user_id == "remove" and len(message.command) > 2:
        try:
            target_user_id = int(message.command[2])
            biolink_exceptions_collection.delete_one({"_id": target_user_id})
            await send_and_auto_delete_reply(message, text=f"‡§ì‡§ï‡•á! ‚ú® ‡§Ø‡•Ç‡§ú‡§º‡§∞ `{target_user_id}` ‡§ï‡•ã ‡§Ö‡§¨ ‡§¨‡§æ‡§Ø‡•ã ‡§Æ‡•á‡§Ç ‡§≤‡§ø‡§Ç‡§ï ‡§∞‡§ñ‡§®‡•á ‡§ï‡•Ä ‡§õ‡•Ç‡§ü ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡•á‡§ó‡•Ä! ‡§¨‡§æ‡§Ø-‡§¨‡§æ‡§Ø ‡§™‡§∞‡§Æ‡§ø‡§∂‡§®! üëã", parse_mode=ParseMode.MARKDOWN)
            logger.info(f"Removed user {target_user_id} from biolink exceptions in group {message.chat.id}.")
        except ValueError:
            await send_and_auto_delete_reply(message, text="‡§â‡§Æ‡•ç‡§Æ, ‡§ó‡§≤‡§§ ‡§Ø‡•Ç‡§ú‡§º‡§∞‡§Ü‡§à‡§°‡•Ä! üßê ‡§Ø‡•Ç‡§ú‡§º‡§∞‡§Ü‡§à‡§°‡•Ä ‡§è‡§ï ‡§®‡§Ç‡§¨‡§∞ ‡§π‡•ã‡§§‡•Ä ‡§π‡•à. ‡§´‡§ø‡§∞ ‡§∏‡•á ‡§ü‡•ç‡§∞‡§æ‡§à ‡§ï‡§∞‡•ã, ‡§™‡•ç‡§≤‡•Ä‡§ú‡§º! üòâ", parse_mode=ParseMode.MARKDOWN)
    else:
        try:
            target_user_id = int(action_or_user_id)
            biolink_exceptions_collection.update_one(
                {"_id": target_user_id},
                {"$set": {"allowed_by_admin": True, "added_on": datetime.now(), "credit": "by @asbhaibsr"}},
                upsert=True
            )
            await send_and_auto_delete_reply(message, text=f"‡§Ø‡§æ‡§Ø! üéâ ‡§Æ‡•à‡§Ç‡§®‡•á ‡§Ø‡•Ç‡§ú‡§º‡§∞ `{target_user_id}` ‡§ï‡•ã ‡§∏‡•ç‡§™‡•á‡§∂‡§≤ ‡§™‡§∞‡§Æ‡§ø‡§∂‡§® ‡§¶‡•á ‡§¶‡•Ä ‡§π‡•à! ‡§Ö‡§¨ ‡§Ø‡•á **‡§Ö‡§™‡§®‡•Ä ‡§¨‡§æ‡§Ø‡•ã ‡§Æ‡•á‡§Ç `t.me` ‡§Ø‡§æ `http/https` ‡§≤‡§ø‡§Ç‡§ï‡•ç‡§∏** ‡§∞‡§ñ ‡§™‡§æ‡§è‡§Ç‡§ó‡•á ‡§î‡§∞ ‡§â‡§®‡§ï‡•á ‡§Æ‡•à‡§∏‡•á‡§ú ‡§°‡§ø‡§≤‡•Ä‡§ü ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã‡§Ç‡§ó‡•á! ‡§ï‡•ç‡§Ø‡•Ç‡§Ç‡§ï‡§ø ‡§è‡§°‡§Æ‡§ø‡§® ‡§®‡•á ‡§¨‡•ã‡§≤‡§æ, ‡§§‡•ã ‡§¨‡•ã‡§≤‡§æ!üëë", parse_mode=ParseMode.MARKDOWN)
            logger.info(f"Added user {target_user_id} to biolink exceptions in group {message.chat.id}.")
        except ValueError:
            await send_and_auto_delete_reply(message, text="‡§â‡§Æ‡•ç‡§Æ, ‡§ó‡§≤‡§§ ‡§Ø‡•Ç‡§ú‡§º‡§∞‡§Ü‡§à‡§°‡•Ä! üßê ‡§Ø‡•Ç‡§ú‡§º‡§∞‡§Ü‡§à‡§°‡•Ä ‡§è‡§ï ‡§®‡§Ç‡§¨‡§∞ ‡§π‡•ã‡§§‡•Ä ‡§π‡•à. ‡§´‡§ø‡§∞ ‡§∏‡•á ‡§ü‡•ç‡§∞‡§æ‡§à ‡§ï‡§∞‡•ã, ‡§™‡•ç‡§≤‡•Ä‡§ú‡§º! üòâ", parse_mode=ParseMode.MARKDOWN)

    await store_message(message)


async def toggle_usernamedel_command(client: Client, message: Message):
    if is_on_command_cooldown(message.from_user.id):
        return
    update_command_cooldown(message.from_user.id)

    if not await is_admin_or_owner(client, message.chat.id, message.from_user.id):
        await send_and_auto_delete_reply(message, text="‡§Æ‡§æ‡§´‡§º ‡§ï‡§∞‡§®‡§æ, ‡§Ø‡•á ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§∏‡§ø‡§∞‡•ç‡§´‡§º ‡§Æ‡•á‡§∞‡•á ‡§¨‡•â‡§∏ (‡§è‡§°‡§Æ‡§ø‡§®) ‡§π‡•Ä ‡§Ø‡•Ç‡§ú‡§º ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç! ü§∑‚Äç‚ôÄÔ∏è", parse_mode=ParseMode.MARKDOWN)
        return

    if len(message.command) < 2:
        current_status_doc = group_tracking_collection.find_one({"_id": message.chat.id})
        current_status = current_status_doc.get("usernamedel_enabled", False) if current_status_doc else False
        status_text = "‡§ö‡§æ‡§≤‡•Ç ‡§π‡•à (ON)" if current_status else "‡§¨‡§Ç‡§¶ ‡§π‡•à (OFF)"
        await send_and_auto_delete_reply(message, text=f"‡§Æ‡•á‡§∞‡•Ä '@' ‡§ü‡•à‡§ó ‡§™‡•Å‡§≤‡§ø‡§∏ ‡§Ö‡§≠‡•Ä **{status_text}** ‡§π‡•à. ‡§á‡§∏‡•á ‡§ï‡§Ç‡§ü‡•ç‡§∞‡•ã‡§≤ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è `/usernamedel on` ‡§Ø‡§æ `/usernamedel off` ‡§Ø‡•Ç‡§ú‡§º ‡§ï‡§∞‡•ã.üö®", parse_mode=ParseMode.MARKDOWN)
        return

    action = message.command[1].lower()
    if action == "on":
        group_tracking_collection.update_one(
            {"_id": message.chat.id},
            {"$set": {"usernamedel_enabled": True}},
            upsert=True
        )
        await send_and_auto_delete_reply(message, text="‡§ö‡•Ä‡§Ç-‡§ö‡•Ä‡§Ç! üê¶ ‡§Ö‡§¨ ‡§∏‡•á ‡§ï‡•ã‡§à ‡§≠‡•Ä `@` ‡§ï‡§∞‡§ï‡•á ‡§ï‡§ø‡§∏‡•Ä ‡§ï‡•ã ‡§≠‡•Ä ‡§™‡§∞‡•á‡§∂‡§æ‡§® ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§∞ ‡§™‡§æ‡§è‡§ó‡§æ! ‡§ú‡•ã ‡§ï‡§∞‡•á‡§ó‡§æ, ‡§â‡§∏‡§ï‡§æ ‡§Æ‡•à‡§∏‡•á‡§ú ‡§Æ‡•à‡§Ç ‡§´‡§ü ‡§∏‡•á ‡§â‡§°‡§º‡§æ ‡§¶‡•Ç‡§Ç‡§ó‡•Ä!üí® ‡§Æ‡•Å‡§ù‡•á ‡§°‡§ø‡§∏‡•ç‡§ü‡§∞‡•ç‡§¨‡•á‡§Ç‡§∏ ‡§™‡§∏‡§Ç‡§¶ ‡§®‡§π‡•Ä‡§Ç! üò†", parse_mode=ParseMode.MARKDOWN)
        logger.info(f"Username deletion enabled in group {message.chat.id} by admin {message.from_user.id}.")
    elif action == "off":
        group_tracking_collection.update_one(
            {"_id": message.chat.id},
            {"$set": {"usernamedel_enabled": False}},
            upsert=True
        )
        await send_and_auto_delete_reply(message, text="‡§†‡•Ä‡§ï ‡§π‡•à! ‡§Ü‡§ú ‡§∏‡•á ‡§Æ‡•á‡§∞‡•Ä @ ‡§µ‡§æ‡§≤‡•Ä ‡§Ü‡§Ç‡§ñ‡•á‡§Ç ‡§¨‡§Ç‡§¶! üò¥ ‡§Ö‡§¨ ‡§Ü‡§™ ‡§ú‡•ã ‡§ö‡§æ‡§π‡•á @ ‡§ï‡§∞‡•ã! ‡§™‡§∞ ‡§ú‡§º‡•ç‡§Ø‡§æ‡§¶‡§æ ‡§§‡§Ç‡§ó ‡§Æ‡§§ ‡§ï‡§∞‡§®‡§æ ‡§ï‡§ø‡§∏‡•Ä ‡§ï‡•ã! ü•∫", parse_mode=ParseMode.MARKDOWN)
        logger.info(f"Username deletion disabled in group {message.chat.id} by admin {message.from_user.id}.")
    else:
        await send_and_auto_delete_reply(message, text="‡§âmm... ‡§Æ‡•Å‡§ù‡•á ‡§∏‡§Æ‡§ù ‡§®‡§π‡•Ä‡§Ç ‡§Ü‡§Ø‡§æ! üòï `/usernamedel on` ‡§Ø‡§æ `/usernamedel off` ‡§Ø‡•Ç‡§ú‡§º ‡§ï‡§∞‡•ã, ‡§™‡•ç‡§≤‡•Ä‡§ú‡§º! ‚ú®", parse_mode=ParseMode.MARKDOWN)

    await store_message(message)


async def clear_all_dbs_command_initiate(client: Client, message: Message):
    if is_on_command_cooldown(message.from_user.id):
        return
    update_command_cooldown(message.from_user.id)

    if message.from_user.id != OWNER_ID:
        await send_and_auto_delete_reply(message, text="‡§Æ‡§æ‡§´‡§º ‡§ï‡§∞‡§®‡§æ, ‡§Ø‡•á ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§∏‡§ø‡§∞‡•ç‡§´‡§º ‡§Æ‡•á‡§∞‡•á ‡§¨‡•â‡§∏ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡•à‡•§ üö´", parse_mode=ParseMode.MARKDOWN)
        return

    keyboard = InlineKeyboardMarkup(
        [
            [
                InlineKeyboardButton("‡§π‡§æ‡§Å, ‡§°‡§ø‡§≤‡•Ä‡§ü ‡§ï‡§∞‡•á‡§Ç ‚ö†Ô∏è", callback_data='confirm_clearall_dbs'),
                InlineKeyboardButton("‡§®‡§π‡•Ä‡§Ç, ‡§∞‡§π‡§®‡•á ‡§¶‡•á‡§Ç ‚úÖ", callback_data='cancel_clearall_dbs')
            ]
        ]
    )

    await send_and_auto_delete_reply(
        message,
        text="‚ö†Ô∏è **‡§ö‡•á‡§§‡§æ‡§µ‡§®‡•Ä:** ‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§µ‡§æ‡§ï‡§à ‡§Ö‡§™‡§®‡•Ä ‡§∏‡§≠‡•Ä MongoDB ‡§°‡•á‡§ü‡§æ‡§¨‡•á‡§∏ (Messages, Buttons, Tracking) ‡§ï‡§æ **‡§∏‡§æ‡§∞‡§æ ‡§°‡•á‡§ü‡§æ** ‡§°‡§ø‡§≤‡•Ä‡§ü ‡§ï‡§∞‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?\n\n"
             "‡§Ø‡§π ‡§ï‡§æ‡§∞‡•ç‡§∞‡§µ‡§æ‡§à **‡§Ö‡§™‡§∞‡§ø‡§µ‡§∞‡•ç‡§§‡§®‡•Ä‡§Ø (irreversible)** ‡§π‡•à ‡§î‡§∞ ‡§Ü‡§™‡§ï‡§æ ‡§∏‡§æ‡§∞‡§æ ‡§°‡•á‡§ü‡§æ ‡§π‡§Æ‡•á‡§∂‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡§ü ‡§ú‡§æ‡§è‡§ó‡§æ‡•§\n\n"
             "‡§∏‡•ã‡§ö ‡§∏‡§Æ‡§ù‡§ï‡§∞ ‡§ö‡•Å‡§®‡•á‡§Ç!",
        reply_markup=keyboard,
        parse_mode=ParseMode.MARKDOWN
    )
    logger.info(f"Owner {message.from_user.id} initiated /clearall command. Waiting for confirmation.")
    await store_message(message) # Store the command itself

